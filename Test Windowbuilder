package View;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import Controller.Controller;

@SuppressWarnings("serial")
public class MainGUI extends javax.swing.JFrame {

	Controller controller;
	DefaultTableModel DataModel;

	public MainGUI() throws SQLException {
		initializeComponents();

		controller = new Controller();

	}

	private void initializeComponents() {

		/*----------------------------------------------------------------------------------------------------------*/
		/*--------------------------------------------- DECLARE OBJECTS! -------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/


	
	
		Data = new javax.swing.JPanel();
		DataLabel = new javax.swing.JLabel();
		DataTableScrollPane = new javax.swing.JScrollPane();	
		DataTable = new javax.swing.JTable();
		DataModel = new javax.swing.table.DefaultTableModel();
		
		ShowEmployeeContentButton = new javax.swing.JButton();
		EmployeeLabel = new javax.swing.JLabel();
		MetadataLabel = new javax.swing.JLabel();
		
		EmployeeMetadataButton = new javax.swing.JButton();
		
		
		DatabaseKeysButton = new javax.swing.JButton();
		DatabaseIndexButton = new javax.swing.JButton();
		
		TableConstraintsButton = new javax.swing.JButton();
		TablesMetadataButton = new javax.swing.JButton();
		EmployeeColumnsButton = new javax.swing.JButton();
		TableMostRowsButton = new javax.swing.JButton();

		/*----------------------------------------------------------------------------------------------------------*/
		/*-------------------------------------------------- BUTTONS! ----------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/


		
		EmployeeMetadataButton.setText("Find Employee Meta Data");
		EmployeeMetadataButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				try {
					EmployeeMetadataButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});

		

		DatabaseKeysButton.setText("Find Database Keys");
		DatabaseKeysButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				DatabaseKeysButtonActionPerformed(evt);
			}
		});

		DatabaseIndexButton.setText("Find Database Index");
		DatabaseIndexButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				try {
					DatabaseIndexButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});


		TableConstraintsButton.setText("Find All Table Constraints");
		TableConstraintsButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				try {
					TableConstraintsButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});
		TablesMetadataButton.setText("All Meta Data");
		TablesMetadataButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					TablesMetadataButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});
		
		ShowEmployeeContentButton.setText("Show Employee Content");
		ShowEmployeeContentButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				try {
					ShowEmployeeContentButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});
		
		EmployeeColumnsButton.setText("Show Employee Columns");
		EmployeeColumsbutton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				try {
					EmployeeColumnsButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});
		
		TableMostRowsButton.setText("Show Employee Content");
		TableMostRowsButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				try {
					TableMostRowsButtonActionPerformed(evt);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		});


		/*----------------------------------------------------------------------------------------------------------*/
		/*------------------------------------------------ PANES! --------------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/

		/*----------------------------------------------------------------------------------------------------------*/
		/*------------------------------------------------ LABELS! -------------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/

		DataLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
		DataLabel.setText("DATA");
		
		

		/*----------------------------------------------------------------------------------------------------------*/
		/*----------------------------------------------- INFO BOX! ------------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/

		/*----------------------------------------------------------------------------------------------------------*/
		/*--------------------------------------------- STUDENT TABLE! ---------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/

		DataTable.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
		DataTable.setModel(DataModel = new DefaultTableModel(new Object [][] {
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null},
				{null, null, null, null, null, null, null, null}},
				new String [] {
				"", "", "", "", "", "", "", ""
		}) { Class[] types = new Class [] {
				java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, 
				java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
		};

		public Class getColumnClass(int columnIndex) {
			return types [columnIndex];
		}
		});

		DataTable.getTableHeader().setReorderingAllowed(false);
		DataTableScrollPane.setViewportView(DataTable);
		DataTable.getColumnModel().getColumn(0).setHeaderValue("");
		DataTable.getColumnModel().getColumn(1).setHeaderValue("");
		DataTable.getColumnModel().getColumn(2).setHeaderValue("");
		DataTable.getColumnModel().getColumn(3).setHeaderValue("");
		DataTable.getColumnModel().getColumn(4).setHeaderValue("");
		DataTable.getColumnModel().getColumn(5).setHeaderValue("");
		DataTable.getColumnModel().getColumn(6).setHeaderValue("");
		DataTable.getColumnModel().getColumn(7).setHeaderValue("");

		/*----------------------------------------------------------------------------------------------------------*/
		/*---------------------------------------------- COURSE TABLE! ---------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/

		

		/*----------------------------------------------------------------------------------------------------------*/
		/*--------------------------------------------- LAYOUTS! ---------------------------------------------*/
		/*----------------------------------------------------------------------------------------------------------*/
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(4, 4, 4)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup()
										.addGap(187, 187, 187)
										.addComponent(DataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createSequentialGroup()
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(layout.createSequentialGroup()
																.addGap(36, 36, 36)
																
																
																.addComponent(ShowEmployeeContentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGroup(layout.createSequentialGroup()
																		
																		.addComponent(DatabaseIndexButton)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		
																		.addComponent(DataTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(layout.createSequentialGroup()
																						
																						.addComponent(TableConstraintsButton)
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(TablesMetadataButton))
																						.addComponent(MetadataLabel)
																						.addGroup(layout.createSequentialGroup()
																								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
																										.addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
																												
																												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																														
																														.addGroup(layout.createSequentialGroup()
																																
																																.addComponent(EmployeeMetadataButton))))
																																
																																.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																																		.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																																				
																																				.addComponent(DatabaseKeysButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																				
																																				.addContainerGap(62, Short.MAX_VALUE))
				);




		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								
								.addComponent(DataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(EmployeeLabel)
										.addComponent(MetadataLabel))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												
												
												.addComponent(ShowEmployeeContentButton)
												.addComponent(EmployeeMetadataButton)
												
												.addGap(25, 25, 25)
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(layout.createSequentialGroup()
																
																
																
																.addComponent(DatabaseKeysButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
																
																.addComponent(DataTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(18, 18, 18)
																.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																		
				);
		pack();
	}

	/*----------------------------------------------------------------------------------------------------------*/
	/*----------------------------------------------- METHODS! -------------------------------------------------*/
	/*----------------------------------------------------------------------------------------------------------*/

	private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {
		AddDialog.setVisible(true);
		AddDialog.setSize(350,350);
	}

		private void EmployeeMetadataButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {

	CourseModel.setRowCount(0); // DELETES ALL ROWS!
		
		if((CourseCodeTextField.getText().equals("") || CourseCodeTextField.getText().equals("Course Code"))
			&& (CourseNameTextField.getText().equals("") || CourseNameTextField.getText().equals("Course Name"))){
			CourseTable.setModel(controller.getAllCourses(CourseModel)); 
		}
		else if( CourseCodeTextField.getText().equals("") || CourseCodeTextField.getText().equals("Course Code")){
				String courseDef = CourseNameTextField.getText();
				CourseTable.setModel(controller.getCourseByName(courseDef, CourseModel));
		}
		
		else {
			String courseCode = CourseCodeTextField.getText();
			CourseTable.setModel(controller.getCourse(courseCode, CourseModel)); 
			
		}
		
	}


	

	private void DatabaseKeysButtonActionPerformed(java.awt.event.ActionEvent evt) {

		// IMPLEMENT GRADE STUDENT METHOD!

	}

	private void DatabaseIndexButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
		CourseModel.setRowCount(0); // DELETES ALL ROWS!
		String socNmbr = (String)DataTable.getValueAt(DataTable.getSelectedRow(), 2);
		CourseTable.setModel(controller.getStudentHistory(socNmbr, CourseModel)); 
	}

	private void CurrentCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
		CourseModel.setRowCount(0); // DELETES ALL ROWS!
		String socNmbr = (String)DataTable.getValueAt(DataTable.getSelectedRow(), 2);
		CourseTable.setModel(controller.getActiveCourses(socNmbr, CourseModel)); 	
	}


	
	

	



	

	

	/*----------------------------------------------------------------------------------------------------------*/
	/*------------------------------------------- OBJECT CREATION! ---------------------------------------------*/
	/*----------------------------------------------------------------------------------------------------------*/
    private javax.swing.JButton EmployeeColumnsButton;
	private javax.swing.JButton TableConstraintsButton;
	private javax.swing.JButton TablesMetadataButton;
	private javax.swing.JButton DatabaseKeysButton;
	private javax.swing.JLabel EmployeeLabel;
	private javax.swing.JLabel MetadataLabel;
	private javax.swing.JButton EmployeeMetadataButton;
	private javax.swing.JButton ShowEmployeeContentButton;
	private javax.swing.JButton DatabaseIndexButton;
	private javax.swing.JLabel DataLabel;
	private javax.swing.JTable DataTable;
	private javax.swing.JScrollPane DataTableScrollPane;
	private javax.swing.JPanel Data;
	private javax.swing.JButton TableMostRowsButton;
}
